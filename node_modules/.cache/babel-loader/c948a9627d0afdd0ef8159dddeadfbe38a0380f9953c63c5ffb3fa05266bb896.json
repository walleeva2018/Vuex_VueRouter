{"ast":null,"code":"import { ref, onMounted, computed } from \"vue\";\nimport axios from \"axios\";\nimport { useStore } from \"vuex\";\nimport CommentView from \"./CommentVIew.vue\";\nconst resultsPerPage = 10;\nexport default {\n  __name: 'ShowView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const store = useStore();\n    const call = store.getters.getCurrentFeed;\n    const ids = ref([]);\n    if (store.getters.getCurrentFeed == \"TopStory\") {\n      ids.value = store.getters.getTopStoryID;\n    } else if (store.getters.getCurrentFeed == \"NewStory\") {\n      ids.value = store.getters.getNewStoryID;\n    } else if (store.getters.getCurrentFeed == \"BestStory\") {\n      ids.value = store.getters.getBestStoryID;\n    }\n    const apiResults = ref([]);\n    const currentPage = ref(1);\n    const loading = ref(true);\n    const error = ref(null);\n    console.log(ids);\n    const totalPages = computed(() => Math.ceil(ids.value.length / resultsPerPage));\n    onMounted(async () => {\n      fetchCurrentPageData();\n    });\n    async function fetchCurrentPageData() {\n      try {\n        const startIndex = (currentPage.value - 1) * resultsPerPage;\n        const endIndex = startIndex + resultsPerPage;\n        const pageIds = ids.value.slice(startIndex, endIndex);\n        const requests = pageIds.map(id => axios.get(`https://hacker-news.firebaseio.com/v0/item/${id}.json?print=pretty`));\n        const responses = await Promise.all(requests);\n        apiResults.value = responses.map(response => response.data);\n        for (const obj of apiResults.value) {\n          obj.comment = false;\n        }\n        loading.value = false;\n      } catch (err) {\n        error.value = err.message;\n        loading.value = false;\n      }\n    }\n    function previousPage() {\n      if (currentPage.value > 1) {\n        currentPage.value--;\n      }\n      fetchCurrentPageData();\n    }\n    function nextPage() {\n      if (currentPage.value < totalPages.value) {\n        currentPage.value++;\n      }\n      fetchCurrentPageData();\n    }\n    function updateComment(result) {\n      {\n        {\n          store.commit(\"setComments\", result.kids);\n        }\n      }\n      result.comment = !result.comment;\n    }\n    const __returned__ = {\n      store,\n      call,\n      ids,\n      resultsPerPage,\n      apiResults,\n      currentPage,\n      loading,\n      error,\n      totalPages,\n      fetchCurrentPageData,\n      previousPage,\n      nextPage,\n      updateComment,\n      ref,\n      onMounted,\n      computed,\n      get axios() {\n        return axios;\n      },\n      get useStore() {\n        return useStore;\n      },\n      CommentView\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","axios","useStore","CommentView","resultsPerPage","store","call","getters","getCurrentFeed","ids","value","getTopStoryID","getNewStoryID","getBestStoryID","apiResults","currentPage","loading","error","console","log","totalPages","Math","ceil","length","fetchCurrentPageData","startIndex","endIndex","pageIds","slice","requests","map","id","get","responses","Promise","all","response","data","obj","comment","err","message","previousPage","nextPage","updateComment","result","commit","kids"],"sources":["/home/user/Zubair/Project/Vuex_VueRouter/hacker/vuex-router/src/components/ShowView.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>{{ call }}</h1>\n    <div v-if=\"loading\">Loading...</div>\n    <div v-else-if=\"error\">Error occurred: {{ error }}</div>\n    <div v-else class=\"banner-container\">\n      <ul class=\"banner-list\">\n        <li v-for=\"result in apiResults\" :key=\"result\" class=\"banner-item\">\n          <div v-if=\"result.url\">\n            <a :href=\"result.url\" target=\"empty\"> {{ result.title }}</a>\n            <br />\n            Created by\n            <router-link\n              :to=\"{\n                name: 'user',\n                params: {\n                  username: `${result.by}`,\n                },\n              }\"\n              >{{ result.by }}</router-link\n            >\n            at\n            <span v-if=\"result.time\">\n              {{ Date(result.time * 1000).toLocaleString() }}</span\n            >\n            <br />\n            <br />\n            <div @click=\"updateComment(result)\">\n              <span v-if=\"!result.comment\">\n                <span v-if=\"result.kids\" class=\"clickable-area\">\n                  comments\n                </span></span\n              >\n              <span v-else class=\"clickable-area\">\n                Hide Comments\n                <br />\n              </span>\n            </div>\n            <div v-if=\"result.comment\"><CommentView /></div>\n            <br />\n          </div>\n          <div v-else>{{ result.title }}</div>\n        </li>\n      </ul>\n    </div>\n    Page : {{ currentPage }} <br />\n    <button @click=\"previousPage\" :disabled=\"currentPage === 1\">\n      Previous\n    </button>\n    <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\">\n      Next\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, computed } from \"vue\";\nimport axios from \"axios\";\nimport { useStore } from \"vuex\";\nimport CommentView from \"./CommentVIew.vue\";\nconst store = useStore();\nconst call = store.getters.getCurrentFeed;\nconst ids = ref([]);\nif (store.getters.getCurrentFeed == \"TopStory\") {\n  ids.value = store.getters.getTopStoryID;\n} else if (store.getters.getCurrentFeed == \"NewStory\") {\n  ids.value = store.getters.getNewStoryID;\n} else if (store.getters.getCurrentFeed == \"BestStory\") {\n  ids.value = store.getters.getBestStoryID;\n}\n\nconst resultsPerPage = 10;\nconst apiResults = ref([]);\nconst currentPage = ref(1);\nconst loading = ref(true);\nconst error = ref(null);\n\nconsole.log(ids);\n\nconst totalPages = computed(() => Math.ceil(ids.value.length / resultsPerPage));\nonMounted(async () => {\n  fetchCurrentPageData();\n});\n\nasync function fetchCurrentPageData() {\n  try {\n    const startIndex = (currentPage.value - 1) * resultsPerPage;\n    const endIndex = startIndex + resultsPerPage;\n    const pageIds = ids.value.slice(startIndex, endIndex);\n\n    const requests = pageIds.map((id) =>\n      axios.get(\n        `https://hacker-news.firebaseio.com/v0/item/${id}.json?print=pretty`\n      )\n    );\n\n    const responses = await Promise.all(requests);\n\n    apiResults.value = responses.map((response) => response.data);\n    for (const obj of apiResults.value) {\n      obj.comment = false;\n    }\n\n    loading.value = false;\n  } catch (err) {\n    error.value = err.message;\n    loading.value = false;\n  }\n}\n\nfunction previousPage() {\n  if (currentPage.value > 1) {\n    currentPage.value--;\n  }\n  fetchCurrentPageData();\n}\n\nfunction nextPage() {\n  if (currentPage.value < totalPages.value) {\n    currentPage.value++;\n  }\n  fetchCurrentPageData();\n}\nfunction updateComment(result) {\n  {\n    {\n      store.commit(\"setComments\", result.kids);\n    }\n  }\n  result.comment = !result.comment;\n}\n</script>\n\n<style>\n.banner-container {\n  background-color: #f5f5f5;\n  padding: 20px;\n  justify-content: center;\n  align-items: center;\n}\n\n.banner-list {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.banner-item {\n  background-color: #fff;\n  border-radius: 4px;\n  padding: 10px;\n  margin: 5px;\n}\n.clickable-area {\n  cursor: pointer;\n  color: blue;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}