{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/user/Zubair/Project/Vuex-router/Vuex_VueRouter/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regeneratorRuntime from \"/home/user/Zubair/Project/Vuex-router/Vuex_VueRouter/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/user/Zubair/Project/Vuex-router/Vuex_VueRouter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { ref, onMounted, computed } from \"vue\";\nimport axios from \"axios\";\nimport { useStore } from \"vuex\";\nimport CommentView from \"./CommentVIew.vue\";\nvar resultsPerPage = 10;\nexport default {\n  __name: 'ShowView',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var store = useStore();\n    var call = store.getters.getCurrentFeed;\n    var ids = ref([]);\n    if (store.getters.getCurrentFeed == \"TopStory\") {\n      ids.value = store.getters.getTopStoryID;\n    } else if (store.getters.getCurrentFeed == \"NewStory\") {\n      ids.value = store.getters.getNewStoryID;\n    } else if (store.getters.getCurrentFeed == \"BestStory\") {\n      ids.value = store.getters.getBestStoryID;\n    }\n    var apiResults = ref([]);\n    var currentPage = ref(1);\n    var loading = ref(true);\n    var error = ref(null);\n    var totalPages = computed(function () {\n      return Math.ceil(ids.value.length / resultsPerPage);\n    });\n    onMounted( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            fetchCurrentPageData();\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    })));\n    function fetchCurrentPageData() {\n      return _fetchCurrentPageData.apply(this, arguments);\n    }\n    function _fetchCurrentPageData() {\n      _fetchCurrentPageData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var startIndex, endIndex, pageIds, requests, responses, _iterator, _step, obj;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              startIndex = (currentPage.value - 1) * resultsPerPage;\n              endIndex = startIndex + resultsPerPage;\n              pageIds = ids.value.slice(startIndex, endIndex);\n              requests = pageIds.map(function (id) {\n                return axios.get(\"https://hacker-news.firebaseio.com/v0/item/\".concat(id, \".json?print=pretty\"));\n              });\n              _context2.next = 7;\n              return Promise.all(requests);\n            case 7:\n              responses = _context2.sent;\n              apiResults.value = responses.map(function (response) {\n                return response.data;\n              });\n              _iterator = _createForOfIteratorHelper(apiResults.value);\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  obj = _step.value;\n                  obj.comment = false;\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n              loading.value = false;\n              _context2.next = 18;\n              break;\n            case 14:\n              _context2.prev = 14;\n              _context2.t0 = _context2[\"catch\"](0);\n              error.value = _context2.t0.message;\n              loading.value = false;\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 14]]);\n      }));\n      return _fetchCurrentPageData.apply(this, arguments);\n    }\n    function previousPage() {\n      if (currentPage.value > 1) {\n        currentPage.value--;\n      }\n      fetchCurrentPageData();\n    }\n    function nextPage() {\n      if (currentPage.value < totalPages.value) {\n        currentPage.value++;\n      }\n      fetchCurrentPageData();\n    }\n    function updateComment(result) {\n      {\n        {\n          store.commit(\"setComments\", result.kids);\n        }\n      }\n      result.comment = !result.comment;\n    }\n    var __returned__ = {\n      store: store,\n      call: call,\n      ids: ids,\n      resultsPerPage: resultsPerPage,\n      apiResults: apiResults,\n      currentPage: currentPage,\n      loading: loading,\n      error: error,\n      totalPages: totalPages,\n      fetchCurrentPageData: fetchCurrentPageData,\n      previousPage: previousPage,\n      nextPage: nextPage,\n      updateComment: updateComment,\n      ref: ref,\n      onMounted: onMounted,\n      computed: computed,\n      get axios() {\n        return axios;\n      },\n      get useStore() {\n        return useStore;\n      },\n      CommentView: CommentView\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","axios","useStore","CommentView","resultsPerPage","store","call","getters","getCurrentFeed","ids","value","getTopStoryID","getNewStoryID","getBestStoryID","apiResults","currentPage","loading","error","totalPages","Math","ceil","length","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","fetchCurrentPageData","stop","_fetchCurrentPageData","apply","arguments","_callee2","startIndex","endIndex","pageIds","requests","responses","_iterator","_step","obj","_callee2$","_context2","slice","map","id","get","concat","Promise","all","sent","response","data","_createForOfIteratorHelper","s","n","done","comment","err","e","f","t0","message","previousPage","nextPage","updateComment","result","commit","kids"],"sources":["/home/user/Zubair/Project/Vuex-router/Vuex_VueRouter/src/components/ShowView.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>{{ call }}</h1>\n    <div v-if=\"loading\">Loading...</div>\n    <div v-else-if=\"error\">Error occurred: {{ error }}</div>\n    <div v-else class=\"banner-container\">\n      <ul class=\"banner-list\">\n        <li v-for=\"result in apiResults\" :key=\"result\" class=\"banner-item\">\n          <div v-if=\"result.url\">\n            <a :href=\"result.url\" target=\"empty\"> {{ result.title }}</a>\n            <br />\n            Created by\n            <router-link\n              :to=\"{\n                name: 'user',\n                params: {\n                  username: `${result.by}`,\n                },\n              }\"\n              >{{ result.by }}</router-link\n            >\n            at\n            <span v-if=\"result.time\">\n              {{ Date(result.time * 1000).toLocaleString() }}</span\n            >\n            <br />\n            <br />\n            <div @click=\"updateComment(result)\">\n              <span v-if=\"!result.comment\">\n                <span v-if=\"result.kids\" class=\"clickable-area\">\n                  {{ Object.keys(result.kids).length }} comments\n                  <router-link\n                    :to=\"{\n                      name: 'comments',\n                      params: {\n                        id: `${result.id}`,\n                      },\n                    }\"\n                    >Open in Another Page\n                  </router-link>\n                </span></span\n              >\n              <span v-else class=\"clickable-area\">\n                Hide Comments\n                <br />\n              </span>\n            </div>\n            <div v-if=\"result.comment\"><CommentView /></div>\n            <br />\n          </div>\n          <div v-else>{{ result.title }}</div>\n        </li>\n      </ul>\n    </div>\n    Page : {{ currentPage }} <br />\n    <button @click=\"previousPage\" :disabled=\"currentPage === 1\">\n      Previous\n    </button>\n    <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\">\n      Next\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, computed } from \"vue\";\nimport axios from \"axios\";\nimport { useStore } from \"vuex\";\nimport CommentView from \"./CommentVIew.vue\";\nconst store = useStore();\nconst call = store.getters.getCurrentFeed;\nconst ids = ref([]);\nif (store.getters.getCurrentFeed == \"TopStory\") {\n  ids.value = store.getters.getTopStoryID;\n} else if (store.getters.getCurrentFeed == \"NewStory\") {\n  ids.value = store.getters.getNewStoryID;\n} else if (store.getters.getCurrentFeed == \"BestStory\") {\n  ids.value = store.getters.getBestStoryID;\n}\n\nconst resultsPerPage = 10;\nconst apiResults = ref([]);\nconst currentPage = ref(1);\nconst loading = ref(true);\nconst error = ref(null);\n\nconst totalPages = computed(() => Math.ceil(ids.value.length / resultsPerPage));\nonMounted(async () => {\n  fetchCurrentPageData();\n});\n\nasync function fetchCurrentPageData() {\n  try {\n    const startIndex = (currentPage.value - 1) * resultsPerPage;\n    const endIndex = startIndex + resultsPerPage;\n    const pageIds = ids.value.slice(startIndex, endIndex);\n\n    const requests = pageIds.map((id) =>\n      axios.get(\n        `https://hacker-news.firebaseio.com/v0/item/${id}.json?print=pretty`\n      )\n    );\n\n    const responses = await Promise.all(requests);\n\n    apiResults.value = responses.map((response) => response.data);\n    for (const obj of apiResults.value) {\n      obj.comment = false;\n    }\n\n    loading.value = false;\n  } catch (err) {\n    error.value = err.message;\n    loading.value = false;\n  }\n}\n\nfunction previousPage() {\n  if (currentPage.value > 1) {\n    currentPage.value--;\n  }\n  fetchCurrentPageData();\n}\n\nfunction nextPage() {\n  if (currentPage.value < totalPages.value) {\n    currentPage.value++;\n  }\n  fetchCurrentPageData();\n}\nfunction updateComment(result) {\n  {\n    {\n      store.commit(\"setComments\", result.kids);\n    }\n  }\n  result.comment = !result.comment;\n}\n</script>\n\n<style>\n.banner-container {\n  background-color: #f5f5f5;\n  padding: 20px;\n  justify-content: center;\n  align-items: center;\n}\n\n.banner-list {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.banner-item {\n  background-color: #fff;\n  border-radius: 4px;\n  padding: 10px;\n  margin: 5px;\n}\n.clickable-area {\n  cursor: pointer;\n  color: blue;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}