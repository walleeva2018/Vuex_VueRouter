{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = [\"disabled\"];\nconst _hoisted_2 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" Display data for each ID \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.paginatedData, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: item.id\n    }, [_createElementVNode(\"p\", null, _toDisplayString(item), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" Pagination \"), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: $setup.previousPage,\n    disabled: $setup.currentPage === 1\n  }, \" Previous \", 8 /* PROPS */, _hoisted_1), _createElementVNode(\"span\", null, \"Page \" + _toDisplayString($setup.currentPage), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: $setup.nextPage,\n    disabled: $setup.currentPage === $setup.totalPages\n  }, \" Next \", 8 /* PROPS */, _hoisted_2)])]);\n}","map":{"version":3,"names":["_createElementBlock","_createCommentVNode","_Fragment","_renderList","$setup","paginatedData","item","key","id","_createElementVNode","_toDisplayString","onClick","previousPage","disabled","currentPage","_hoisted_1","nextPage","totalPages","_hoisted_2"],"sources":["/home/user/Zubair/Project/Vuex_VueRouter/hacker/vuex-router/src/views/ShowView.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- Display data for each ID -->\n    <div v-for=\"item in paginatedData\" :key=\"item.id\">\n      <p>{{ item }}</p>\n    </div>\n\n    <!-- Pagination -->\n    <div>\n      <button @click=\"previousPage\" :disabled=\"currentPage === 1\">\n        Previous\n      </button>\n      <span>Page {{ currentPage }}</span>\n      <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\">\n        Next\n      </button>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, watch } from \"vue\";\nimport axios from \"axios\";\n\nconst ids = [36146905, 36136179, 36138304];\nconst perPage = 10;\nconst currentPage = ref(1);\nconst data = ref([]);\n\n// Watch for changes in the IDs prop\nwatch(\n  () => ids,\n  () => {\n    currentPage.value = 1;\n    fetchData();\n  },\n  { immediate: true }\n);\n\n// Fetch data for the current page\nconst fetchData = async () => {\n  try {\n    const start = (currentPage.value - 1) * perPage;\n    const end = start + perPage;\n    const idsToFetch = ids.slice(start, end);\n    const responses = await Promise.all(\n      idsToFetch.map((id) => axios.get(`https://hacker-news.firebaseio.com/v0/item/${id}.json?print=pretty`))\n    );\n    data.value = responses.map((response) => response.data);\n  } catch (error) {\n    console.error(\"Error fetching data:\", error);\n  }\n};\n\n// Compute paginated data based on current page\nconst paginatedData = computed(() => {\n  const start = (currentPage.value - 1) * perPage;\n  const end = start + perPage;\n  return data.value.slice(start, end);\n});\n\n// Calculate total number of pages\nconst totalPages = computed(() => Math.ceil(ids.length / perPage));\n\n// Go to previous page\nconst previousPage = () => {\n  if (currentPage.value > 1) {\n    currentPage.value--;\n  }\n};\n\n// Go to next page\nconst nextPage = () => {\n  if (currentPage.value < totalPages.value) {\n    currentPage.value++;\n  }\n};\n</script>\n"],"mappings":";;;;uBACEA,mBAAA,CAgBM,cAfJC,mBAAA,8BAAiC,G,kBACjCD,mBAAA,CAEME,SAAA,QAAAC,WAAA,CAFcC,MAAA,CAAAC,aAAa,EAArBC,IAAI;yBAAhBN,mBAAA,CAEM;MAF8BO,GAAG,EAAED,IAAI,CAACE;QAC5CC,mBAAA,CAAiB,WAAAC,gBAAA,CAAXJ,IAAI,iB;kCAGZL,mBAAA,gBAAmB,EACnBQ,mBAAA,CAQM,cAPJA,mBAAA,CAES;IAFAE,OAAK,EAAEP,MAAA,CAAAQ,YAAY;IAAGC,QAAQ,EAAET,MAAA,CAAAU,WAAW;KAAQ,YAE5D,iBAAAC,UAAA,GACAN,mBAAA,CAAmC,cAA7B,OAAK,GAAAC,gBAAA,CAAGN,MAAA,CAAAU,WAAW,kBACzBL,mBAAA,CAES;IAFAE,OAAK,EAAEP,MAAA,CAAAY,QAAQ;IAAGH,QAAQ,EAAET,MAAA,CAAAU,WAAW,KAAKV,MAAA,CAAAa;KAAY,QAEjE,iBAAAC,UAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}