{"ast":null,"code":"import { createStore } from \"vuex\";\nconst store = createStore({\n  state: {\n    TopStoryID: null,\n    currentFeed: null,\n    BestStoryID: null,\n    NewStoryID: null,\n    Commnets: null,\n    Comment: null\n  },\n  mutations: {\n    setTopStoryID(state, data) {\n      state.TopStoryID = data;\n    },\n    setCurrentFeed(state, date) {\n      state.currentFeed = date;\n    },\n    setBestStoryID(state, data) {\n      state.BestStoryID = data;\n    },\n    setNewStoryID(state, data) {\n      state.NewStoryID = data;\n    },\n    setComments(state, data) {\n      state.Commnets = data;\n    },\n    setCommen(state, data) {\n      state.Comment = data;\n    }\n  },\n  getters: {\n    getTopStoryID(state) {\n      return state.TopStoryID;\n    },\n    getCurrentFeed(state) {\n      return state.currentFeed;\n    },\n    getBestStoryID(state) {\n      return state.BestStoryID;\n    },\n    getNewStoryID(state) {\n      return state.NewStoryID;\n    },\n    getComments(state) {\n      return state.Commnets;\n    },\n    getComment(state) {\n      return state.Comment;\n    }\n  }\n});\nexport default store;","map":{"version":3,"names":["createStore","store","state","TopStoryID","currentFeed","BestStoryID","NewStoryID","Commnets","Comment","mutations","setTopStoryID","data","setCurrentFeed","date","setBestStoryID","setNewStoryID","setComments","setCommen","getters","getTopStoryID","getCurrentFeed","getBestStoryID","getNewStoryID","getComments","getComment"],"sources":["/home/user/Zubair/Project/Vuex_VueRouter/hacker/vuex-router/src/store/index.js"],"sourcesContent":["import { createStore } from \"vuex\";\n\nconst store = createStore({\n  state: {\n    TopStoryID: null,\n    currentFeed: null,\n    BestStoryID: null,\n    NewStoryID: null,\n    Commnets: null,\n    Comment: null,\n  },\n  mutations: {\n    setTopStoryID(state, data) {\n      state.TopStoryID = data;\n    },\n    setCurrentFeed(state, date) {\n      state.currentFeed = date;\n    },\n    setBestStoryID(state, data) {\n      state.BestStoryID = data;\n    },\n    setNewStoryID(state, data) {\n      state.NewStoryID = data;\n    },\n    setComments(state, data) {\n      state.Commnets = data;\n    },\n    setCommen(state, data) {\n      state.Comment = data;\n    },\n  },\n  getters: {\n    getTopStoryID(state) {\n      return state.TopStoryID;\n    },\n    getCurrentFeed(state) {\n      return state.currentFeed;\n    },\n    getBestStoryID(state) {\n      return state.BestStoryID;\n    },\n    getNewStoryID(state) {\n      return state.NewStoryID;\n    },\n    getComments(state) {\n      return state.Commnets;\n    },\n    getComment(state) {\n      return state.Comment;\n    },\n  },\n});\n\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAElC,MAAMC,KAAK,GAAGD,WAAW,CAAC;EACxBE,KAAK,EAAE;IACLC,UAAU,EAAE,IAAI;IAChBC,WAAW,EAAE,IAAI;IACjBC,WAAW,EAAE,IAAI;IACjBC,UAAU,EAAE,IAAI;IAChBC,QAAQ,EAAE,IAAI;IACdC,OAAO,EAAE;EACX,CAAC;EACDC,SAAS,EAAE;IACTC,aAAaA,CAACR,KAAK,EAAES,IAAI,EAAE;MACzBT,KAAK,CAACC,UAAU,GAAGQ,IAAI;IACzB,CAAC;IACDC,cAAcA,CAACV,KAAK,EAAEW,IAAI,EAAE;MAC1BX,KAAK,CAACE,WAAW,GAAGS,IAAI;IAC1B,CAAC;IACDC,cAAcA,CAACZ,KAAK,EAAES,IAAI,EAAE;MAC1BT,KAAK,CAACG,WAAW,GAAGM,IAAI;IAC1B,CAAC;IACDI,aAAaA,CAACb,KAAK,EAAES,IAAI,EAAE;MACzBT,KAAK,CAACI,UAAU,GAAGK,IAAI;IACzB,CAAC;IACDK,WAAWA,CAACd,KAAK,EAAES,IAAI,EAAE;MACvBT,KAAK,CAACK,QAAQ,GAAGI,IAAI;IACvB,CAAC;IACDM,SAASA,CAACf,KAAK,EAAES,IAAI,EAAE;MACrBT,KAAK,CAACM,OAAO,GAAGG,IAAI;IACtB;EACF,CAAC;EACDO,OAAO,EAAE;IACPC,aAAaA,CAACjB,KAAK,EAAE;MACnB,OAAOA,KAAK,CAACC,UAAU;IACzB,CAAC;IACDiB,cAAcA,CAAClB,KAAK,EAAE;MACpB,OAAOA,KAAK,CAACE,WAAW;IAC1B,CAAC;IACDiB,cAAcA,CAACnB,KAAK,EAAE;MACpB,OAAOA,KAAK,CAACG,WAAW;IAC1B,CAAC;IACDiB,aAAaA,CAACpB,KAAK,EAAE;MACnB,OAAOA,KAAK,CAACI,UAAU;IACzB,CAAC;IACDiB,WAAWA,CAACrB,KAAK,EAAE;MACjB,OAAOA,KAAK,CAACK,QAAQ;IACvB,CAAC;IACDiB,UAAUA,CAACtB,KAAK,EAAE;MAChB,OAAOA,KAAK,CAACM,OAAO;IACtB;EACF;AACF,CAAC,CAAC;AAEF,eAAeP,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}